import { Checkbox } from "antd";
import React from "react";
import { questionObj } from "@redux/slices/assessment";
import BodyComponentStyle from "./bodyComponentStyle.module.scss";
export interface FrontBodyComponentProps {
    onClick?: (d: any) => void;
    onChange?: (d: any) => void;
    height?: string;
    width?: string;
    partsInput?: any;
    setCurrentQuestionObj: (d: any) => void;
    currentQuestionObj?: questionObj;
    frontParts?: any;
    setFrontParts: (d?: any) => any;
}

export const FrontBodyComponent: React.FC<FrontBodyComponentProps> = ({
    onClick,
    onChange,
    frontParts,
    setFrontParts,
}) => {
    const onClickSvg = ({ target }: any) => {
        const id = target.id || target.parentElement.id;
        const newParts = { ...frontParts };

        if (newParts[id]?.clickable !== undefined && !newParts[id]?.clickable)
            return;

        if (newParts[id] === true || newParts[id] === false) {
            newParts[id] = !newParts[id];
        } else if (newParts[id]) {
            newParts[id].selected = !newParts[id].selected;
        } else {
            newParts[id] = { selected: true };
        }

        setFrontParts(newParts);
        if (onChange) onChange(newParts);
        if (onClick) onClick(id);
    };

    const bodyParts: any = {
        head: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="head"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M195.448 52.7263C194.853 50.5783 194.217 48.436 193.662 46.2766C191.721 38.75 191.641 31.1088 193.645 23.6796C194.521 20.4318 197.097 17.648 198.86 14.6351C199.427 13.6613 199.867 12.6188 199.759 11.3014C200.789 10.4422 201.82 9.5887 202.85 8.7295C204.287 7.8302 206.943 9.17628 207.052 5.84258C208.54 6.05452 209.76 6.24927 210.979 6.39247C211.546 6.45548 212.164 6.57004 212.685 6.40965C222.073 3.61439 222.13 3.37954 227.214 4.72562C232.349 6.08889 237.827 7.14857 242.281 9.81209C248.292 13.4093 253.135 18.5129 255.671 25.5813C259.209 35.4277 258.041 44.9477 254.778 54.6968C254.314 50.1201 254.039 45.5148 253.329 40.9782C252.505 35.7313 251.475 30.5074 250.164 25.3636C249.694 23.5249 248.349 21.7951 247.055 20.3173C245.298 18.3067 243.403 17.648 240.312 18.6046C231.748 21.2566 222.909 22.8548 213.853 22.5512C212.341 22.4996 210.807 22.2247 209.347 21.818C205.426 20.7297 202.318 21.6863 199.787 25.1231C195.643 30.7537 194.647 37.0488 195.883 43.8594C196.398 46.689 196.473 49.5931 196.753 52.4686C196.318 52.5545 195.883 52.6347 195.442 52.7206L195.448 52.7263ZM196.209 58.4599C198.03 54.5878 198.167 50.8417 197.95 47.0268C197.721 42.9542 196.994 38.8129 197.446 34.8147C197.984 30.0261 199.839 25.5411 204.905 23.4962C205.552 23.2384 206.416 23.015 207.017 23.2327C214.471 25.879 221.918 24.4184 229.309 23.1124C232.933 22.4709 236.453 21.1935 239.985 20.0937C243.231 19.0856 246.391 20.5921 247.96 24.2466C250.81 30.8853 251.692 37.8792 251.95 45.0736C252.099 49.192 253.301 53.2761 254.039 57.4289C257.966 55.4069 258.596 55.785 258.642 60.1153C258.665 62.1144 258.573 64.1192 258.55 66.1183C258.51 70.0764 257.176 73.284 253.753 75.6153C251.205 77.3509 249.58 79.9743 249.58 83.0904C249.58 89.6146 245.847 93.6471 240.861 96.8892C230.608 103.551 214.768 102.646 205.392 94.9875C203.17 93.1717 201.636 91.1554 201.379 88.1253C201.144 85.393 200.715 82.5806 199.781 80.0202C198.837 77.4197 197.474 74.8421 195.757 72.6826C192.391 68.4381 191.647 63.5808 191.693 58.4714C191.693 58.0704 193.021 57.4232 193.771 57.3602C194.418 57.3086 195.116 57.933 196.198 58.4485L196.209 58.4599Z"
                fill="currentColor"
            />
        ),
        neck: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="neck"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M214.74 142.736C201.133 135.565 186.884 134.367 172.441 134.133C188.218 125.151 194.715 125.753 199.81 103.763C204.516 116.049 209.49 129.035 214.74 142.73V142.736ZM201.35 95.4514C216.909 106.272 232.188 106.415 247.702 94.7927C247.095 97.9317 246.838 101.088 245.859 104.003C242.83 113.014 239.619 121.972 236.299 130.879C234.782 134.952 232.795 138.853 231.129 142.874C230.763 143.75 230.849 144.815 230.608 146.74C242.825 140.439 255.012 137.02 268.167 137.61C265.591 139.5 263.548 141.86 259.907 142.329C256.501 142.771 252.9 143.916 250.026 145.755C244.519 149.283 239.344 153.373 234.261 157.509C229.824 161.123 228.553 166.376 228.044 171.8C227.368 179.012 226.653 186.223 226.252 193.452C226.029 197.57 226.407 201.723 226.515 206.18H220.676C224.288 197.353 220.871 188.537 220.642 179.699C220.55 176.176 220.327 172.648 219.978 169.142C219.257 161.885 214.711 156.93 209.221 152.984C204.229 149.392 198.74 146.471 193.387 143.401C192.191 142.713 190.645 142.266 189.283 142.324C185.418 142.478 183.083 139.872 179.539 137.478C181.085 137.346 181.829 137.209 182.573 137.232C193.587 137.615 204.063 140.147 213.961 145.062C214.86 145.509 216.005 145.468 217.035 145.652C217.07 144.558 217.442 143.332 217.075 142.398C214.934 136.905 212.313 131.584 210.423 126.01C207.218 116.559 204.424 106.97 201.493 97.4276C201.287 96.7517 201.379 95.9841 201.344 95.4572L201.35 95.4514ZM275.655 133.898C267.687 134.631 260.508 134.74 253.57 136.086C246.752 137.409 240.169 139.987 232.933 142.181C235.938 135.719 239.213 129.447 241.811 122.9C244.388 116.399 246.277 109.623 248.635 102.468C249.471 105.613 250.324 108.334 250.902 111.118C252.322 117.905 256.272 122.78 262.111 126.234C265.546 128.267 269.066 130.157 272.547 132.111C273.343 132.557 274.138 133.021 275.661 133.892L275.655 133.898Z"
                fill="currentColor"
            />
        ),
        shoulders: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="shoulders"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M182.608 142.295C174.09 145.033 167.764 149.914 162.887 156.615C158.685 162.395 154.626 168.283 150.602 174.189C147.545 178.68 144.619 183.256 141.688 187.827C140.767 189.265 139.639 189.706 137.899 189.7C136.204 189.7 134.292 190.113 132.85 190.972C129.174 193.166 125.728 195.738 122.145 198.092C120.324 199.289 118.412 200.337 116.099 201.712C115.561 199.226 115.092 197.141 114.663 195.045C112.092 182.368 112.167 169.921 117.181 157.698C119.958 150.927 124.286 145.938 130.84 142.639C140.921 137.57 151.472 135.485 162.692 136.699C164.959 136.945 167.312 137.352 169.521 137.008C174.765 136.189 178.377 138.99 182.608 142.284V142.295ZM332.718 201.918C327.715 198.619 323.284 195.715 318.876 192.776C317.611 191.934 316.5 190.789 315.149 190.153C313.947 189.592 312.281 188.979 311.216 189.391C308.829 190.33 307.736 189.305 306.562 187.547C300.477 178.433 294.317 169.377 288.226 160.27C284.093 154.089 279.256 148.636 272.598 145.091C270.526 143.985 268.293 143.183 265.637 142.02C269.158 139.827 271.728 136.848 276.222 136.934C283.727 137.083 291.266 136.39 298.737 136.865C307.656 137.438 315.682 141.081 323.038 146.099C326.879 148.717 329.054 152.652 330.88 156.799C335.929 168.255 336.845 180.135 334.515 192.347C333.966 195.234 333.428 198.126 332.718 201.913V201.918Z"
                fill="currentColor"
            />
        ),
        chest: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="chest"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M184.983 212.314C181.76 211.627 177.473 211.151 173.488 209.788C162.76 206.117 152.983 200.692 144.499 193.017C142.553 191.252 142.364 190.153 143.938 187.913C150.115 179.098 155.776 169.921 162.114 161.226C165.268 156.902 169.103 152.892 173.271 149.524C181.01 143.263 189.603 142.948 197.967 148.332C203.067 151.615 207.802 155.487 212.547 159.284C216.543 162.481 217.808 167.057 218.22 171.955C218.85 179.458 219.411 186.968 220.178 194.454C221.151 203.946 219.302 206.947 209.851 208.74C202.003 210.229 194.022 211.048 184.983 212.32V212.314ZM260.525 144.712C268.729 144.924 274.648 148.08 278.964 153.11C285.198 160.373 290.637 168.329 296.241 176.113C299.241 180.278 301.943 184.66 304.627 189.036C305.074 189.757 305.171 191.47 304.708 191.865C296.636 198.659 288.158 204.685 278.226 208.752C269.576 212.297 260.972 212.005 252.162 210.756C245.698 209.84 239.207 209.216 233.001 206.661C228.925 204.983 227.689 202.033 227.906 198.401C228.479 188.818 229.355 179.247 230.294 169.692C230.792 164.617 233.253 160.464 237.467 157.56C243.077 153.694 248.698 149.822 254.537 146.328C256.547 145.125 259.231 145.045 260.519 144.718L260.525 144.712Z"
                fill="currentColor"
            />
        ),
        Abdomen: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="Abdomen"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M197.892 374.022C196.204 371.897 194.337 369.892 192.866 367.629C186.575 357.978 178.062 350.56 169.081 343.577C165.554 340.839 162.097 337.993 158.816 334.974C157.923 334.149 157.523 332.534 157.362 331.222C155.834 318.81 157.168 306.466 158.748 294.185C160.345 281.801 161.89 269.428 161.392 256.918C161.055 248.498 158.862 240.468 154.105 233.485C150.384 228.021 149.148 222.338 150.081 215.912C150.705 211.61 150.934 207.251 151.386 202.434C161.765 207.325 171.222 213.483 182.877 214.646C182.344 218.604 181.52 222.407 181.371 226.245C180.867 239.162 180.747 252.09 180.203 265.006C179.557 280.186 181.497 294.958 185.281 309.668C187.262 317.366 187.428 325.511 188.83 333.387C191.2 346.699 193.456 360.057 198.379 372.756C198.476 373.002 198.425 373.3 198.448 373.569C198.265 373.724 198.081 373.879 197.904 374.039L197.892 374.022ZM221.529 227.711C221.529 233.233 221.575 238.749 221.466 244.271C221.455 244.935 220.665 246.064 220.087 246.167C212.885 247.467 205.649 248.538 198.448 249.821C192.981 250.795 188.378 248.51 183.827 246.133C183.066 245.732 182.39 244.242 182.453 243.314C183.088 234.402 183.919 225.5 184.628 216.593C184.76 214.915 185.527 214.439 187.141 214.245C193.845 213.443 200.543 212.544 207.212 211.512C209.542 211.152 211.774 210.178 214.099 209.725C216.119 209.336 218.209 209.256 220.27 209.095C221.93 208.969 222.302 209.886 222.285 211.415C222.21 216.845 222.256 222.275 222.256 227.706C222.016 227.706 221.775 227.706 221.535 227.706L221.529 227.711ZM225.244 208.419C228.09 208.82 230.986 209.13 233.848 209.651C241.502 211.037 249.127 212.572 256.787 213.901C258.464 214.193 259.649 214.44 259.821 216.467C260.548 225.283 261.332 234.098 262.157 242.902C262.363 245.079 261.315 246.178 259.477 247.055C253.598 249.862 247.645 250.778 241.205 249.008C236.178 247.628 230.98 246.877 225.25 245.726V208.425L225.244 208.419ZM182.161 249.134C182.894 248.917 183.014 248.836 183.077 248.871C191 253.339 199.169 253.109 207.653 250.589C211.265 249.518 215.135 249.317 218.902 248.796C221.088 248.493 222.165 249.254 222.142 251.752C222.05 260.413 222.119 269.079 222.216 277.74C222.239 279.533 221.592 280.764 219.961 281.24C217.791 281.875 215.558 282.569 213.326 282.689C207.155 283.015 200.949 283.365 194.79 283.078C191.172 282.912 187.577 281.658 184.05 280.621C183.254 280.386 182.258 279.04 182.247 278.192C182.121 268.489 182.167 258.786 182.167 249.134H182.161ZM262.345 248.39C262.345 258.637 262.38 268.443 262.277 278.25C262.265 279.063 261.487 280.335 260.765 280.598C258.012 281.612 255.15 282.941 252.31 282.992C244.508 283.13 236.688 282.815 228.891 282.397C224.93 282.185 224.746 281.744 224.746 277.9C224.741 269.125 224.838 260.355 224.752 251.58C224.729 249.22 225.554 248.493 227.792 248.951C232.085 249.827 236.453 250.4 240.684 251.506C246.643 253.058 252.356 252.926 257.943 250.205C259.128 249.627 260.382 249.191 262.34 248.384L262.345 248.39ZM181.766 283.05C195.803 287.42 208.786 286.189 221.93 283.64C221.93 290.714 221.93 298.108 221.93 305.498C221.93 306.07 221.85 306.637 221.821 307.21C221.518 312.52 220.854 313.236 215.598 313.253C206.187 313.293 197.492 310.154 188.825 306.987C187.937 306.66 186.798 305.801 186.609 304.994C184.932 297.902 183.449 290.765 181.778 283.055L181.766 283.05ZM225.216 284.894C231.33 285.203 237.489 285.564 243.649 285.81C249.855 286.057 256.014 285.833 262.575 282.305C261.481 288.52 260.273 293.784 259.701 299.111C259.025 305.429 255.499 308.35 249.574 309.387C243.042 310.527 236.608 312.302 230.047 313.15C225.416 313.746 225.267 313.265 225.227 308.671C225.159 300.692 225.21 292.713 225.21 284.888L225.216 284.894ZM187.708 309.885C198.98 312.515 209.507 318.031 221.855 314.754V394.918C214.997 395.141 208.031 389.975 205.094 383.525C195.522 362.514 191.366 340.198 188.75 317.487C188.458 314.966 188.063 312.463 187.708 309.885ZM225.067 395.095V315.602C236.505 316.868 246.38 312.532 256.89 309.599C256.718 310.888 256.524 312.217 256.369 313.545C254.411 330.294 252.07 347.003 247.124 363.156C244.542 371.593 240.987 379.738 237.781 387.975C237.1 389.722 236.402 391.807 235.039 392.867C232.303 394.986 228.616 395.502 225.067 395.089V395.095ZM240.151 387.248C240.815 385.495 241.365 383.685 242.155 381.995C248.532 368.317 252.093 353.819 254.554 339.029C256.037 330.105 257.102 321.112 258.573 312.188C259.3 307.783 260.794 303.504 261.464 299.094C262.615 291.487 263.828 283.846 264.206 276.182C264.721 265.728 264.847 255.217 264.441 244.758C264.069 235.261 262.758 225.804 261.853 216.33C261.808 215.877 261.716 215.425 261.584 214.577C274.974 214.932 285.524 207.635 297.082 202.084C297.563 206.443 298.027 210.573 298.474 214.709C298.594 215.843 298.668 216.983 298.765 218.123C299.195 223.289 298.302 227.986 295.308 232.489C288.856 242.18 286.875 253.161 287.276 264.628C287.522 271.76 287.706 278.908 288.375 286.011C289.165 294.437 290.825 302.788 291.398 311.22C291.879 318.225 291.427 325.299 291.157 332.333C291.112 333.513 290.144 334.945 289.182 335.759C283.435 340.616 277.161 344.918 271.837 350.188C265.5 356.466 259.792 363.408 254.096 370.299C250.038 375.208 246.454 380.506 242.642 385.615C242.092 386.349 241.428 386.996 240.821 387.683C240.598 387.54 240.38 387.402 240.157 387.259L240.151 387.248Z"
                fill="currentColor"
            />
        ),
        biceps: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="biceps"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M103.093 275.437C102.63 274.2 102.006 273.186 101.897 272.126C101.067 263.987 99.4983 255.813 99.7616 247.696C100.248 232.821 103.059 218.352 112.253 205.951C112.98 204.971 113.461 203.522 115.27 204.49C115.624 204.679 116.483 204.089 117.033 203.74C122.07 200.497 127.177 197.347 132.088 193.933C135.1 191.842 138.775 191.522 141.637 193.767C143.887 195.526 146.148 197.296 148.18 199.289C148.924 200.016 149.417 201.425 149.348 202.479C148.982 207.892 148.003 213.288 147.963 218.695C147.883 230.186 143.852 240.668 140.091 251.19C137.498 258.442 132.689 263.792 124.95 266.404C118.567 268.563 112.47 271.582 106.242 274.205C105.292 274.606 104.324 274.956 103.088 275.437H103.093ZM345.547 275.363C336.433 271.542 327.423 268.117 318.75 263.993C313.981 261.724 310.953 257.148 309.184 252.25C306.505 244.827 303.992 237.294 302.183 229.625C300.889 224.149 300.866 218.369 300.288 212.727C299.905 209.032 299.407 205.338 299.252 201.632C299.206 200.549 299.87 198.968 300.729 198.39C304.301 195.99 307.175 192.186 311.995 192.135C313.094 192.123 314.342 192.559 315.281 193.16C320.553 196.574 325.745 200.102 330.972 203.579C331.367 203.843 331.854 204.267 332.231 204.204C336.153 203.533 336.794 206.976 338.271 209.135C344.883 218.793 346.869 229.945 348.506 241.235C350.058 251.912 347.739 262.314 346.697 272.814C346.652 273.278 346.446 273.73 346.262 274.166C346.119 274.498 345.896 274.796 345.552 275.363H345.547Z"
                fill="currentColor"
            />
        ),
        forearms: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="forearms"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M97.7178 254.175C98.3819 259.874 98.9887 265.064 99.5898 270.253C99.647 270.729 99.647 271.204 99.7157 271.679C100.637 278.295 101.565 278.794 107.713 276.187C114.995 273.1 122.299 270.076 129.598 267.028C129.758 266.959 129.97 267.022 130.657 267.022C130.039 270.476 129.558 273.902 128.802 277.27C126.661 286.813 123.936 296.304 117.491 303.819C113.025 309.02 107.181 313.018 102.137 317.755C95.9718 323.546 89.732 329.297 84.0074 335.507C77.0177 343.085 70.6806 351.207 67.4175 361.265C66.9596 362.669 65.9292 363.883 65.3395 364.886C59.5176 360.704 53.8274 356.62 48.3203 352.662C54.0564 338.508 59.9183 324.371 65.5113 310.12C69.0204 301.179 71.9056 291.991 75.4606 283.072C80.0517 271.565 88.3123 262.749 97.7293 254.18L97.7178 254.175ZM317.811 266.599C323.982 269.159 329.318 271.353 334.642 273.587C337.802 274.916 340.99 276.199 344.07 277.7C345.679 278.484 346.726 278.089 347.264 276.634C347.986 274.692 348.655 272.676 348.942 270.631C349.663 265.545 350.15 260.424 350.819 254.576C353.121 256.655 355.067 258.35 356.945 260.126C368.525 271.09 374.662 285.094 379.625 299.901C383.432 311.266 387.989 322.372 392.208 333.599C394.383 339.396 396.542 345.198 398.728 350.99C399.186 352.198 399.564 353.149 398.116 354.157C392.975 357.731 387.949 361.466 382.677 365.292C382.098 363.694 381.629 361.787 380.747 360.091C377.942 354.713 375.527 349.019 371.972 344.173C365.32 335.106 357.798 326.714 349.027 319.566C346.669 317.641 344.196 315.86 341.717 314.084C330.262 305.87 324.194 294.254 320.851 280.953C319.729 276.48 318.928 271.932 317.811 266.605V266.599Z"
                fill="currentColor"
            />
        ),
        hand_wrist: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="hand_wrist"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M2.83813 397.615C5.64891 394.946 7.98454 392.775 10.2687 390.541C15.936 384.991 22.7196 381.176 29.8181 377.814C34.4894 375.597 37.6379 372.011 39.7217 367.211C41.3818 363.39 43.6316 359.816 45.7955 356.242C46.1332 355.686 47.6789 355.217 48.1941 355.52C53.6038 358.676 59.0651 361.81 63.2154 366.988C55.9681 375.15 55.1208 385.42 53.4493 395.473C52.8138 399.288 51.7147 403.109 50.2435 406.683C47.2381 413.975 43.8548 421.112 40.5746 428.289C40.1167 429.297 39.3496 430.162 38.0444 430.924C38.176 430.019 38.1932 429.079 38.4565 428.209C39.5156 424.646 40.8609 421.157 41.6566 417.537C42.0115 415.922 41.7883 413.768 40.9296 412.428C40.277 411.414 36.161 414.238 35.2451 416.174C32.5717 421.839 29.8754 427.498 27.036 433.077C26.3147 434.492 25.0324 435.615 24.0077 436.875L22.9544 436.411C23.1891 435.231 23.2635 433.988 23.6928 432.883C25.9426 427.115 28.3297 421.404 30.5394 415.618C30.8772 414.736 30.5165 413.591 30.4822 412.565C29.4747 413.058 27.9748 413.281 27.5283 414.083C23.7443 420.917 20.1894 427.871 16.4684 434.733C15.9589 435.678 14.877 436.314 14.0641 437.093C13.8236 435.924 13.0623 434.55 13.4286 433.622C15.7242 427.79 18.2487 422.051 20.7561 416.312C21.403 414.834 22.4334 413.511 22.983 412.01C23.2864 411.179 22.9544 410.114 22.9143 409.157C21.8781 409.587 20.5729 409.759 19.8745 410.503C18.8555 411.586 18.2831 413.081 17.516 414.398C14.9285 418.832 12.3639 423.277 9.74199 427.693C9.15236 428.684 8.37954 429.555 7.68686 430.483C7.37201 430.38 7.05143 430.276 6.73658 430.168C6.73658 429.228 6.56484 428.249 6.7652 427.355C8.29367 420.562 10.8239 414.083 15.6212 409.037C19.6226 404.827 19.926 399.821 20.4355 394.7C20.6187 392.838 19.0044 392.191 17.0294 393.085C13.8523 394.522 10.6808 395.994 7.41208 397.209C6.1584 397.673 4.66428 397.472 2.85531 397.61L2.83813 397.615ZM438.858 429.44C438.377 428.73 437.867 428.037 437.409 427.309C435.062 423.552 432.744 419.777 430.38 416.031C429.315 414.347 428.319 412.588 426.996 411.122C426.178 410.211 424.815 409.787 423.699 409.14C423.699 410.326 423.304 411.689 423.75 412.674C426.515 418.82 429.509 424.863 432.32 430.987C432.904 432.253 433.167 433.707 433.345 435.105C433.425 435.729 432.916 436.428 432.675 437.093C431.994 436.72 430.998 436.526 430.683 435.953C428.719 432.367 426.945 428.673 425.033 425.052C423.121 421.438 421.214 417.812 419.073 414.341C418.581 413.545 417.121 413.35 416.108 412.88C416.12 413.883 415.862 414.994 416.194 415.876C418.404 421.759 420.768 427.584 423.023 433.45C423.373 434.355 423.441 435.363 423.642 436.325C423.361 436.52 423.081 436.715 422.8 436.909C421.947 436.09 420.814 435.414 420.287 434.418C417.316 428.793 414.482 423.093 411.626 417.411C411.202 416.569 411.111 415.298 410.452 414.885C408.844 413.877 406.995 413.258 405.237 412.479C405.077 414.186 404.481 415.991 404.842 417.577C405.661 421.186 406.966 424.686 408.048 428.237C408.317 429.108 408.512 430.007 408.735 430.889L408.054 431.279C407.281 430.225 406.302 429.268 405.77 428.105C403.949 424.153 402.306 420.115 400.56 416.128C398.883 412.308 396.77 408.63 395.557 404.672C393.948 399.425 392.763 394.012 391.876 388.588C390.302 378.971 389.38 376.021 383.776 367.234C388.733 363.579 393.719 359.851 398.763 356.208C399.942 355.354 400.772 355.91 401.425 357.204C403.48 361.277 405.415 365.441 407.876 369.256C409.576 371.897 411.717 374.549 414.282 376.278C419.514 379.807 425.308 382.499 430.586 385.97C433.631 387.975 436.098 390.856 438.869 393.296C440.352 394.602 441.915 395.811 443.729 397.3C437.478 398.142 432.629 394.837 427.059 392.099C426.973 396.934 425.6 401.31 428.353 405.417C430.889 409.197 433.74 412.812 435.852 416.816C437.598 420.126 438.491 423.89 439.711 427.464C439.871 427.934 439.734 428.506 439.734 429.033C439.442 429.159 439.15 429.291 438.858 429.417V429.44Z"
                fill="currentColor"
            />
        ),
        pelvic_area: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="pelvic_area"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M166.791 344.54C175.131 350.445 181.955 356.855 187.674 364.456C195.059 374.279 202.203 384.309 210.08 393.72C215.335 400.004 216.961 406.918 216.377 414.605C215.661 424.09 214.963 433.604 213.595 443.01C211.397 458.086 208.992 473.151 206.01 488.089C204.132 497.472 201.035 506.614 198.482 515.859C198.173 515.813 197.869 515.767 197.56 515.727C197.303 512.886 197.228 510.016 196.753 507.209C193.622 488.702 190.599 470.178 187.136 451.733C184.938 440.025 182.304 428.38 179.373 416.833C176.047 403.727 172.343 390.707 168.428 377.762C167.083 373.323 166.218 369.147 166.716 364.439C167.283 359.072 166.814 353.596 166.791 348.165C166.791 347.157 166.791 346.155 166.791 344.54ZM250.433 514.467C250.146 513.883 249.769 513.327 249.58 512.714C244.742 496.951 240.083 481.216 239.241 464.507C238.835 456.402 236.304 448.412 234.799 440.358C232.658 428.896 231.141 417.372 232.852 405.721C233.602 400.606 235.64 396.126 239.207 392.031C245.452 384.865 251.051 377.138 256.861 369.6C263.771 360.641 272.089 353.092 280.538 345.674C280.796 345.445 281.168 345.348 281.901 344.981C281.849 346.104 281.901 346.906 281.758 347.667C280.366 355.154 280.653 362.6 281.546 370.15C281.906 373.18 280.75 376.479 279.909 379.55C276.674 391.389 272.953 403.103 270.034 415.017C265.929 431.76 262.168 448.589 258.647 465.464C256.077 477.768 254.028 490.192 251.961 502.593C251.314 506.471 251.366 510.457 251.097 514.398C250.873 514.421 250.65 514.444 250.427 514.467H250.433Z"
                fill="currentColor"
            />
        ),
        hips_thighs: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="hips_thighs"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M138.053 408.31C141.368 383.708 148.65 360.171 157.494 336.561C159.835 338.554 161.919 340.289 163.951 342.088C164.272 342.369 164.495 342.901 164.535 343.343C165.657 355.263 165.674 367.062 162.411 378.787C159.698 388.537 153.206 395.548 146.594 402.536C144.345 404.913 141.58 406.803 139.044 408.917C138.712 408.716 138.38 408.51 138.048 408.31H138.053ZM146.669 405.64C146.217 408.688 145.845 410.927 145.564 413.184C144.528 421.444 144.15 429.681 145.415 437.981C146.709 446.447 146.715 455.216 148.907 463.419C151.598 473.483 155.96 483.1 159.624 492.901C160.087 494.15 160.54 495.444 161.249 496.55C164.993 502.369 164.627 508.556 162.629 514.713C161.931 516.856 160.333 518.797 158.845 520.567C157.586 522.062 156.16 521.77 155.33 519.868C152.622 513.676 149.686 507.57 147.293 501.258C143.377 490.925 139.599 480.523 136.227 469.995C135.065 466.363 134.819 462.268 134.968 458.413C135.54 443.663 136.388 428.919 137.326 414.181C137.412 412.875 138.666 411.397 139.771 410.452C141.694 408.808 143.921 407.514 146.663 405.635L146.669 405.64ZM165.926 375.86C168.371 384.613 170.792 392.54 172.79 400.565C177.095 417.847 181.302 435.157 185.258 452.524C186.037 455.944 186.014 459.764 185.436 463.247C182.31 481.955 178.44 500.553 178.017 519.616C178.011 519.966 177.845 520.309 177.553 521.426C176.11 519.53 174.931 518.138 173.929 516.632C167.603 507.129 163.791 496.395 158.873 486.193C150.247 468.299 147.825 449.173 146.863 429.801C146.463 421.707 147.974 413.516 148.752 405.382C148.861 404.254 149.525 402.948 150.35 402.152C157.402 395.255 162.154 387.03 164.913 377.602C165.016 377.258 165.279 376.954 165.915 375.86H165.926ZM188.286 464.559C191.922 486.898 196.862 509.117 194.721 533.014C191.567 531.422 189.088 530.173 186.603 528.924C181.325 526.266 179.356 522.526 179.797 516.156C180.97 499.259 184.079 482.699 186.832 466.059C186.918 465.538 187.182 465.045 187.365 464.536C187.668 464.541 187.977 464.553 188.281 464.559H188.286ZM291.283 337.637C299.269 360.429 307.358 383.158 309.934 407.92C308.99 407.433 308.423 407.296 308.085 406.946C302.28 400.938 296.184 395.17 290.803 388.794C285.708 382.763 284.099 375.185 283.904 367.417C283.733 360.492 283.721 353.55 283.967 346.625C284.128 342.042 286.395 339.539 291.289 337.637H291.283ZM302.046 405.669C305.074 407.748 307.753 409.513 310.323 411.426C310.833 411.804 311.125 412.738 311.176 413.436C312.281 429.2 314.336 444.917 313.541 460.784C313.1 469.554 310.73 477.842 307.49 485.936C303.385 496.189 299.338 506.471 295.239 516.73C294.855 517.698 294.306 518.603 293.762 519.496C292.136 522.188 290.625 522.326 288.536 520.029C285.181 516.334 284.076 506.917 285.771 502.301C291.678 486.165 299.744 470.716 301.57 453.252C303.168 437.992 305.234 422.756 302.063 407.451C301.971 407.01 302.051 406.528 302.051 405.681L302.046 405.669ZM282.485 378.215C285.41 383.175 288.123 388.055 291.123 392.747C292.6 395.055 294.466 397.163 296.413 399.105C298.983 401.665 299.951 404.678 300.414 408.212C303.546 432.178 301.668 455.64 292.818 478.214C288.341 489.63 283.034 500.731 277.859 511.855C276.451 514.879 274.155 517.497 272.266 520.298C271.986 520.218 271.711 520.137 271.431 520.063C271.116 517.571 270.824 515.074 270.475 512.582C268.213 496.246 266.072 479.892 263.605 463.591C262.764 458.04 262.638 452.707 264.04 447.226C268.671 429.125 273.056 410.962 277.647 392.855C278.747 388.519 280.287 384.292 281.655 380.025C281.878 379.332 282.256 378.69 282.473 378.215H282.485ZM261.642 465.229C262.392 469.216 263.296 473.179 263.857 477.195C265.643 490.014 267.332 502.851 268.981 515.687C269.244 517.755 269.198 519.874 269.147 521.965C269.129 522.641 268.814 523.494 268.334 523.947C264.223 527.796 259.775 531.141 253.959 532.808C251.126 509.633 255.917 487.477 260.657 465.315C260.983 465.286 261.31 465.258 261.642 465.235V465.229Z"
                fill="currentColor"
            />
        ),
        knees: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="knees"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M143.137 559.036C143.698 553.75 144.413 548.474 144.78 543.17C145.364 534.618 146.371 526.014 145.936 517.503C145.627 511.523 143.291 505.628 141.728 499.734C140.36 494.573 138.786 489.47 137.349 484.326C137.086 483.387 137.046 482.39 137.561 481.233C137.853 481.852 138.202 482.447 138.425 483.089C140.853 490.111 142.942 497.266 145.764 504.122C148.363 510.434 151.741 516.426 154.792 522.549C155.582 524.141 156.612 524.279 158.267 523.477C161.787 521.776 163.385 518.74 164.421 515.303C165.102 513.041 165.428 510.669 166.081 507.547C167.231 509.38 167.976 510.692 168.84 511.924C171.84 516.191 174.696 520.579 177.954 524.64C182.201 529.932 188.035 532.951 194.395 534.841C195.494 542.059 191.893 554.781 184.669 569.209C182.825 568.413 180.959 567.611 179.167 566.832C179.671 562.737 180.375 558.807 180.575 554.849C180.776 551.029 181.222 547.088 178.95 543.405C179.11 551.367 178.829 559.248 176.74 567.142C173.139 566.964 170.059 566.036 168.067 562.972C166.716 560.898 165.52 558.721 164.369 556.533C162.463 552.902 160.265 549.746 155.37 550.679C156.326 546.435 161.53 543.897 157.683 538.398C155.542 547.449 150.498 553.876 144.018 559.271C143.726 559.191 143.434 559.105 143.142 559.025L143.137 559.036ZM269.232 542.97C268.763 543.915 267.853 544.877 267.893 545.793C268.196 551.968 268.522 558.154 269.244 564.289C269.473 566.248 269.49 567.256 267.446 567.858C266.026 568.276 264.733 569.112 263.164 569.868C260.119 559.042 254.514 549.133 254.211 537.677C254.159 535.798 254.503 535.013 256.369 534.154C264.727 530.288 271.751 524.703 276.857 516.901C278.243 514.782 279.714 512.72 281.529 510.074C282.679 512.72 283.343 514.902 284.517 516.77C285.948 519.044 287.459 521.524 289.56 523.048C292.188 524.943 293.482 524.342 294.855 521.346C297.678 515.206 300.42 509.02 303.002 502.776C305.005 497.936 306.711 492.97 308.577 488.067C308.886 487.247 309.327 486.48 309.705 485.689C309.957 485.752 310.203 485.821 310.455 485.884C310.352 486.846 310.381 487.843 310.129 488.765C308.291 495.473 306.259 502.123 304.553 508.865C301.381 521.409 302.257 534.011 304.284 546.618C304.914 550.519 305.143 554.489 305.641 559.197C298.153 553.83 293.464 547.575 291.415 538.822C289.377 541.446 290.911 543.078 291.386 544.694C291.919 546.487 292.783 548.171 293.659 550.267C288.936 550.364 287.597 554.019 285.685 557.026C284.975 558.149 284.294 559.329 283.818 560.566C281.941 565.412 277.659 566.414 273.285 567.096C272.759 567.176 271.574 565.87 271.413 565.057C270.068 558.321 268.786 551.55 270.326 544.648C270.4 544.304 270.28 543.92 270.251 543.554C269.908 543.359 269.564 543.164 269.226 542.97H269.232Z"
                fill="currentColor"
            />
        ),
        Shins: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="Shins"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M155.439 702.46C155.233 701.99 154.952 701.532 154.832 701.04C152.485 691.222 150.338 681.358 147.774 671.598C144.614 659.552 142.427 647.334 142.255 634.915C141.94 612.141 142.106 589.361 142.238 566.586C142.249 565.022 143.366 563.252 144.43 561.952C146.405 559.523 148.758 557.404 150.888 555.096C154.019 551.693 157.689 551.905 160.213 555.726C160.946 556.837 161.828 557.931 162.228 559.168C164.776 567.056 171.222 569.106 178.372 570.086C185.115 571.008 185.39 571.432 182.551 577.624C177.759 588.089 172.922 598.537 168.159 609.019C167.375 610.749 166.791 612.582 166.253 614.403C160.797 632.79 158.101 651.573 157.82 670.756C157.671 680.665 156.956 690.563 156.469 700.461C156.441 701.103 156.195 701.733 156.051 702.368C155.845 702.397 155.639 702.42 155.433 702.449L155.439 702.46ZM292.566 704.007C292.388 702.471 292.045 700.936 292.05 699.401C292.142 680.212 291.358 661.035 288.541 642.07C287.081 632.246 283.859 622.663 281.208 613.034C278.363 602.701 274.115 592.929 268.969 583.524C267.332 580.534 266.278 577.229 264.922 574.084C264.252 572.537 264.635 571.46 266.267 571.002C268.505 570.372 270.743 569.467 273.016 569.335C278.804 569.009 282.92 566.466 285.507 561.265C286.606 559.054 287.86 556.894 289.291 554.889C291.243 552.163 294.094 552.008 296.59 554.294C297.288 554.935 297.798 555.857 298.588 556.321C305.83 560.594 307.255 567.474 307.335 575.109C307.587 598.187 308.497 621.34 305.246 644.229C302.784 661.573 298.639 678.677 295.239 695.884C294.707 698.576 294.14 701.263 293.585 703.949C293.241 703.961 292.892 703.978 292.548 703.989L292.566 704.007Z"
                fill="currentColor"
            />
        ),
        feet: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="feet"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M138.963 721.821C139.284 722.456 139.599 723.092 139.919 723.728C140.2 723.774 140.48 723.82 140.761 723.866C141.093 722.777 141.768 721.66 141.7 720.601C140.515 702.97 137.538 685.574 133.576 668.401C128.705 647.253 128.67 626.312 133.668 605.233C135.666 596.818 137.08 588.266 139.267 579.737C139.335 580.768 139.45 581.799 139.467 582.836C139.765 601.04 139.788 619.261 140.423 637.453C140.927 651.899 144.281 665.932 147.865 679.909C149.943 688.014 151.3 696.302 153.006 704.505C153.177 705.324 153.487 706.109 153.721 706.87C158.559 706.733 158.461 706.727 158.73 702.002C159.806 683.162 160.757 664.317 162.131 645.501C163.075 632.601 166.126 620.034 170.803 608.011C173.797 600.312 177.965 593.066 181.548 585.597C182.693 583.203 183.667 580.728 185.338 578.271C185.418 579.193 185.63 580.121 185.561 581.032C185.035 588.255 184.336 595.466 183.924 602.695C183.008 618.768 180.089 634.491 175.309 649.814C172.504 658.801 169.286 667.731 165.359 676.277C161.032 685.694 159.732 695.518 160.041 705.53C160.293 713.744 161.77 721.929 162.789 730.115C163.15 733.042 163.539 735.997 164.312 738.827C165.445 742.957 164.501 746.634 162.217 749.945C159.515 753.869 158.644 758.136 158.135 762.804C157.625 767.461 156.303 772.107 154.757 776.552C153.126 781.231 149.061 783.603 144.384 783.053C135.042 781.959 125.774 780.189 116.511 778.522C115.773 778.39 114.914 776.935 114.742 775.979C114.124 772.622 115.636 769.953 117.748 767.416C123.467 760.565 128.058 753.153 130.434 744.332C132.506 736.645 135.494 729.21 138.076 721.666C138.368 721.718 138.66 721.769 138.952 721.821H138.963ZM310.564 584.818C310.85 585.895 311.205 586.96 311.405 588.06C313.409 599.132 316.162 610.136 317.193 621.294C318.693 637.504 318.904 653.772 315.178 669.908C312.201 682.79 309.945 695.844 307.696 708.881C306.992 712.965 307.306 717.232 307.249 721.414C307.238 722.159 307.713 722.909 308.125 724.123C308.904 722.995 309.356 722.342 310.089 721.276C312.533 728.333 315.453 734.932 317.05 741.834C319.34 751.744 324.383 759.935 330.64 767.616C332.46 769.85 334.166 772.09 334.052 775.234C333.977 777.313 333.416 778.654 331.098 778.969C326.295 779.628 321.521 780.51 316.718 781.186C313.037 781.701 309.339 782.108 305.641 782.44C299.384 783.001 295.949 780.939 293.447 775.234C291.633 771.087 290.837 766.803 290.545 762.232C290.31 758.577 289.148 754.676 287.328 751.497C284.299 746.228 282.851 741.072 284.809 735.173C288.971 722.651 289.429 709.74 288.805 696.709C288.392 688.123 285.192 680.315 281.861 672.663C275.008 656.928 270.079 640.603 267.206 623.774C265.368 613.011 265.219 601.956 264.355 591.027C264.057 587.287 263.897 583.529 263.634 579.067C264.572 579.789 264.939 579.932 265.065 580.196C272.844 595.747 279.313 611.871 283.979 628.592C288.072 643.25 288.942 658.457 289.268 673.654C289.52 685.465 289.869 697.27 290.173 709.064C294.689 709.167 294.752 708.933 295.657 704.539C297.861 693.811 299.95 683.048 302.612 672.434C306.694 656.143 308.079 639.555 308.743 622.881C309.224 610.789 309.344 598.686 309.636 586.594C309.648 586.061 309.779 585.528 309.854 584.996C310.089 584.938 310.329 584.881 310.564 584.824V584.818Z"
                fill="currentColor"
            />
        ),
    };

    return (
        <div className="flex justify-between xl:justify-start items-start text-left">
            <div>
                <p className="text-base mb-3 text-left font-bold whitespace-nowrap">
                    Front of body:
                </p>
                {Object.keys(bodyParts).map((part: string) => {
                    return (
                        <label
                            key={part}
                            className={`flex items-start ${BodyComponentStyle.customeCheckbox}`}
                        >
                            <Checkbox
                                value={part}
                                type="Checkbox"
                                className="mt-2.5 capitalize font-medium !ml-0"
                                checked={frontParts[part]?.selected || false}
                                onChange={(e: any) => {
                                    const isChecked = e.target.checked;
                                    setFrontParts((prevParts: any) => {
                                        return {
                                            ...prevParts,
                                            [part]: { selected: isChecked },
                                        };
                                    });
                                }}
                            />
                            <div
                                className="font-semibold text-sm ml-3 mt-2 cursor-pointer"
                                onClick={(e) => {
                                    // Handle the click on the div here if needed
                                    // You can also add additional logic to affect the checkbox
                                }}
                            >
                                {part === "hand_wrist"
                                    ? "Hands/Wrists"
                                    : part === "feet_ankles"
                                    ? "Feet/Ankles"
                                    : part === "hips_thighs"
                                    ? "Hips/Thighs"
                                    : part
                                          .split("_")
                                          .map(
                                              (word) =>
                                                  word.charAt(0).toUpperCase() +
                                                  word.slice(1),
                                          )
                                          .join(" ")}
                            </div>
                        </label>
                    );
                })}
            </div>
            <div className="mt-12">
                <svg
                    width="473"
                    viewBox="0 0 473 833"
                    fill="none"
                    className="w-[150px] md:w-[230px] xl:w-[220px] xl:pr-3 pl-3 xl:pl-0"
                    xmlns="http://www.w3.org/2000/svg"
                >
                    {Object.keys(bodyParts)
                        .filter(
                            (part) =>
                                !frontParts[part] ||
                                frontParts[part]?.show !== false,
                        )
                        .map((part: string, key: number) => {
                            let selected = false;
                            if (frontParts[part])
                                selected = frontParts[part]?.selected;
                            return bodyParts[part](
                                selected,
                                frontParts[part]?.clickable !== undefined
                                    ? frontParts[part].clickable
                                    : true,
                                key,
                            );
                        })}
                </svg>
            </div>
        </div>
    );
};
