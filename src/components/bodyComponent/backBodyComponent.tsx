import { questionObj } from "@redux/slices/assessment";
import { Checkbox } from "antd";
import React, { useEffect, useState } from "react";
import BodyComponentStyle from "./bodyComponentStyle.module.scss";

export interface BackBodyComponentProps {
    onClick?: (d: any) => void;
    onChange?: (d: any) => void;
    height?: string;
    width?: string;
    partsInput?: any;
    setCurrentQuestionObj: (d: any) => void;
    currentQuestionObj?: questionObj;
    backParts?: any;
    setBackParts: (d?: any) => void;
}

export const BackBodyComponent: React.FC<BackBodyComponentProps> = ({
    onClick,
    onChange,
    partsInput,
    setCurrentQuestionObj,
    currentQuestionObj,
    backParts,
    setBackParts,
}) => {
    const onClickSvg = ({ target }: any) => {
        const id = target.id || target.parentElement.id;
        const newParts = { ...backParts };

        if (newParts[id]?.clickable !== undefined && !newParts[id]?.clickable)
            return;

        if (newParts[id] === true || newParts[id] === false) {
            newParts[id] = !newParts[id];
        } else if (newParts[id]) {
            newParts[id].selected = !newParts[id].selected;
        } else {
            newParts[id] = { selected: true };
        }

        setBackParts(newParts);
        if (onChange) onChange(newParts);
        if (onClick) onClick(id);
    };

    const bodyParts: any = {
        head: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="head"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M255.166 45.5201C257.759 54.0445 254.328 61.1312 250.128 67.9971C248.068 71.365 245.866 74.6423 243.72 77.9536C240.681 82.6346 235.994 84.5025 230.78 84.9497C226.009 85.3629 221.186 85.3233 216.391 85.2044C214.874 85.1648 213.261 84.4403 211.897 83.6648C206.695 80.7215 201.221 78.0498 198.583 72.1235C198.164 71.1782 197.655 70.2669 197.123 69.3839C194.202 64.4934 192.011 59.4953 191.943 53.5464C191.836 43.8446 191.275 34.1655 193.46 24.5883C194.944 18.0846 198.544 13.1262 203.995 9.464C215.74 1.58487 231.075 1.63015 242.9 9.43003C249.375 13.7036 252.93 19.8167 254 27.3392C254.86 33.3844 255.319 39.4862 255.959 45.5654L255.172 45.5144L255.166 45.5201Z"
                fill="currentColor"
            />
        ),
        neck: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="neck"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M200.457 94.459C200.27 91.776 200.542 88.9628 199.8 86.444C198.572 82.2723 196.681 78.2931 195.091 74.2234C194.315 72.231 193.585 70.2216 192.832 68.2178C193.138 68.0933 193.444 67.9688 193.749 67.8442C194.31 68.7555 194.808 69.7065 195.436 70.5725C198.674 75.0272 201.844 79.5384 205.257 83.8516C206.293 85.1591 206.746 86.0534 205.789 87.5024C204.21 89.8967 202.721 92.3533 201.193 94.7816C200.944 94.674 200.7 94.5665 200.451 94.459H200.457ZM221.825 89.4779V107.976C207.64 111.995 193.042 116.132 178.443 120.276C178.29 119.959 178.143 119.636 177.99 119.319C178.72 118.753 179.422 118.142 180.187 117.621C191.451 109.962 201.136 100.827 207.385 88.4987C208.121 87.0496 208.942 86.8006 210.527 87.1968C214.065 88.0854 217.676 88.6628 221.82 89.4779H221.825ZM254.436 65.45C252.93 75.5593 244.943 83.3818 247.372 93.9666C246.953 94.0288 246.534 94.0911 246.109 94.1534C244.122 91.1308 242.13 88.1082 240.488 85.6063C245.187 78.8083 249.602 72.4348 254.436 65.4443V65.45ZM223.903 88.9628C228.284 87.825 232.167 86.7213 236.101 85.8722C236.911 85.6968 238.128 86.2854 238.796 86.9081C239.588 87.6439 240.018 88.7816 240.545 89.7778C246.353 100.748 254.181 109.957 264.302 117.185C264.959 117.655 265.531 118.249 265.921 119.319C264.053 118.877 262.163 118.515 260.323 117.977C248.917 114.672 237.539 111.287 226.111 108.049C224.293 107.534 223.807 106.719 223.852 104.919C223.976 99.5702 223.897 94.2212 223.897 88.9684L223.903 88.9628Z"
                fill="currentColor"
            />
        ),
        shoulders: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="shoulders"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M175.392 130.441C169.001 138.428 162.543 146.149 152.688 149.896C152.427 149.998 152.195 150.185 151.935 150.281C143.461 153.388 139.567 159.717 139.363 168.473C139.312 170.635 138.48 171.603 136.527 172.305C132.1 173.901 127.742 175.696 123.389 177.479C117.558 179.873 112.385 183.184 108.722 188.89C108.349 188.205 108.043 187.91 108.049 187.616C108.269 177.665 107.369 167.703 109.741 157.815C113.137 143.647 121.34 134.398 135.129 129.275C145.969 125.245 157.012 124.136 168.339 123.559C171.232 123.411 172.245 124.351 173.128 126.655C173.654 128.025 174.645 129.213 175.398 130.441H175.392ZM339.101 189.648C337.357 187.593 336.14 186.195 334.957 184.758C331.47 180.524 327.372 177.28 321.932 175.792C318.038 174.728 314.279 173.154 310.419 171.943C308.511 171.343 307.787 170.329 307.781 168.275C307.775 165.948 307.362 163.599 306.875 161.313C306.088 157.639 304.045 154.815 300.666 153.003C297.343 151.226 294.15 149.2 290.754 147.598C282.716 143.794 277.667 136.707 271.525 130.515C272.72 128.551 273.886 126.536 275.171 124.6C275.482 124.13 276.167 123.638 276.699 123.621C288.829 123.174 300.711 124.006 312.14 128.868C328.685 135.904 337.703 148.26 339.016 166.022C339.571 173.567 339.106 181.186 339.106 189.654L339.101 189.648Z"
                fill="currentColor"
            />
        ),
        upper_back: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="upper_back"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M176.683 132.083C181.296 137.155 184.568 142.447 186.113 148.736C189.277 161.63 189.606 174.818 190.466 188.301C183.192 188.861 177.481 192.818 171.328 195.801C168.243 197.301 164.778 198.252 161.376 198.824C152.948 200.244 145.974 195.275 144.084 186.926C142.561 180.207 141.134 173.477 142 166.537C142.691 160.996 144.61 156.235 150.186 153.671C156.163 150.926 162.384 148.464 166.946 143.426C170.23 139.804 173.32 136.011 176.677 132.083H176.683ZM173.66 123.326C180.447 121.583 186.555 120.151 192.572 118.43C202.031 115.73 211.427 112.793 220.875 110.059C222.25 109.662 223.903 109.464 225.239 109.838C240.941 114.196 256.61 118.679 272.284 123.128C272.544 123.202 272.793 123.309 273.54 123.581C271.74 125.919 270.099 128.138 268.367 130.289C259.853 140.868 257.385 153.654 255.398 166.531C254.481 172.469 254.051 178.52 253.898 184.531C253.728 191.108 252.228 197.154 248.826 202.797C243.822 211.095 238.79 219.382 234.075 227.844C231.522 232.423 229.648 237.381 227.367 242.125C226.614 243.693 225.55 245.113 224.186 247.315C222.205 244.864 220.343 243.121 219.165 241.004C212.276 228.585 205.806 215.923 198.668 203.646C193.964 195.552 191.887 187.044 191.938 177.841C191.995 167.703 190.359 157.792 188.043 147.954C186.475 141.287 183.277 135.53 178.919 130.317C177.187 128.245 175.658 126.004 173.649 123.326H173.66ZM269.827 131.862C272.804 135.021 275.561 137.596 277.899 140.517C281.358 144.836 285.807 147.711 290.624 150.168C292.973 151.368 295.345 152.528 297.677 153.768C304.249 157.266 306.762 162.858 305.426 170.284C304.713 174.258 304.594 178.333 303.836 182.296C303.275 185.228 302.336 188.143 301.181 190.899C298.843 196.497 293.024 200.007 287.058 198.92C282.665 198.122 278.38 196.52 274.197 194.907C271.231 193.758 268.604 191.748 265.65 190.56C262.791 189.411 259.7 188.816 256.479 187.916C256.881 168.49 257.244 148.951 269.827 131.862Z"
                fill="currentColor"
            />
        ),
        lower_back: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="lower_back"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M147.055 197.295C147.174 197.295 147.401 197.222 147.514 197.307C158.603 205.378 168.894 201.501 178.953 195.122C181.896 193.259 184.568 191.001 188.343 190.967C189.9 190.95 190.851 191.341 191.23 192.914C192.878 199.735 196.885 205.333 200.383 211.259C206.163 221.057 211.404 231.178 216.861 241.174C217.852 242.985 218.775 244.836 219.929 247.066C216.669 249.042 213.357 251.311 209.82 253.134C198.181 259.128 193.596 269.181 193.517 281.617C193.478 287.86 193.489 294.013 191.694 300.069C189.696 306.805 185.717 312.279 180.832 318.16C180.634 315.686 180.322 313.943 180.379 312.216C180.753 300.166 175.907 290.288 168.616 280.971C163.256 274.122 159.022 266.385 154.459 258.942C153.678 257.662 153.65 255.874 153.446 254.3C151.64 240.483 149.795 226.672 148.148 212.838C147.537 207.688 147.412 202.474 147.067 197.301L147.055 197.295ZM265.944 317.452C260.21 310.326 256.395 303.148 254.736 295.015C253.938 291.098 253.751 287 253.74 282.986C253.711 272.741 251.062 263.481 243.262 256.525C240.03 253.643 235.79 251.889 231.981 249.659C230.379 248.719 228.72 247.876 226.377 246.596C234.347 232.389 242.232 218.499 249.936 204.506C251.923 200.901 253.479 197.04 254.945 193.186C255.596 191.471 256.395 190.486 258.155 191.024C261.449 192.025 264.755 193.044 267.919 194.391C271.978 196.124 275.805 198.405 279.886 200.052C286.967 202.905 293.545 201.631 299.494 196.905C299.709 196.729 299.958 196.588 300.202 196.457C300.269 196.423 300.383 196.469 300.654 196.497C300.717 196.769 300.881 197.103 300.847 197.42C298.662 215.533 296.313 233.629 294.332 251.764C293.415 260.147 288.784 266.656 284.51 273.358C281.839 277.547 278.686 281.458 275.505 285.29C268.701 293.498 266.708 303.205 266.25 313.456C266.204 314.526 266.085 315.595 265.944 317.452ZM159.509 272.979C164.575 280.185 169.862 287.254 174.588 294.681C176.23 297.256 176.864 300.669 177.277 303.788C177.979 309.075 178.137 314.435 178.539 319.959C172.42 321.369 166.239 322.795 159.837 324.273C160.658 307.122 162.588 290.186 158.592 273.387C158.897 273.251 159.203 273.115 159.509 272.979ZM265.083 320.876C246.075 323.984 231.975 333.408 223.077 350.853C215.107 332.718 200.48 324.561 182.128 320.627C182.96 319.28 183.526 317.894 184.489 316.88C193.608 307.263 196.421 295.767 195.566 282.794C194.791 270.97 199.291 261.472 209.984 255.489C213.352 253.604 216.822 251.894 220.127 249.902C222.409 248.527 224.718 248.487 226.841 249.636C231.969 252.404 237.426 254.855 241.892 258.489C247.915 263.391 250.23 270.522 250.932 278.237C251.56 285.154 252.393 292.071 253.519 298.926C254.532 305.107 257.962 310.252 261.563 315.25C262.746 316.892 263.719 318.68 265.083 320.871V320.876ZM288.286 271.762C286.854 280.445 286.163 289.156 286.792 297.992C287.409 306.68 287.72 315.386 288.184 324.459C284.058 323.525 280.073 322.574 276.065 321.725C273.954 321.278 271.769 321.137 269.691 320.576C268.989 320.39 267.953 319.28 268.021 318.708C268.831 311.724 269.504 304.694 270.852 297.799C272.136 291.216 277.288 286.649 280.837 281.271C283.044 277.92 285.784 274.92 288.286 271.762Z"
                fill="currentColor"
            />
        ),
        biceps: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="biceps"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M96.0313 267.545C94.9389 265.904 94.0841 264.947 93.5973 263.832C90.4331 256.53 89.284 248.923 91.5255 241.219C94.5256 230.923 97.8767 220.723 101.256 210.546C102.615 206.448 104.46 202.508 106.079 198.495C109.837 189.195 115.679 182.024 125.619 178.763C130.08 177.297 134.393 175.367 139.131 173.505C139.595 175.848 140.002 178.101 140.495 180.337C141.672 185.658 142.635 191.046 144.163 196.265C146.24 203.386 146.076 210.263 143.829 217.321C140.404 228.07 138.168 239.266 132.117 248.996C128.942 254.102 125.155 258.817 121.787 263.804C120.14 266.243 117.892 266.69 115.238 266.713C107.432 266.781 107.103 266.679 108.603 259.139C109.741 253.434 111.598 247.87 113.166 242.249C114.247 238.366 114.802 234.461 113.307 230.589C112.815 229.315 112.022 228.031 111.032 227.114C108.756 225.002 105.796 225.704 104.579 228.529C102.439 233.493 100.922 238.581 100.928 244.094C100.933 251.889 99.439 259.423 96.0257 267.539L96.0313 267.545ZM307.877 173.652C312.032 175.169 316.351 176.743 320.67 178.327C329.404 181.537 335.478 187.259 339.457 195.88C344.229 206.221 349.437 216.37 352.471 227.385C354.265 233.9 355.562 240.562 356.773 247.219C357.101 249.042 356.462 251.108 355.986 252.992C355.075 256.643 354.056 260.277 352.873 263.843C352.573 264.749 351.475 265.388 350.744 266.153C350.195 265.468 349.335 264.851 349.142 264.075C348.288 260.538 347.393 256.989 346.935 253.389C346.278 248.255 346.301 243.025 345.44 237.936C344.869 234.563 343.459 231.274 342.067 228.104C340.878 225.404 335.642 225.574 334.374 228.455C333.389 230.691 332.551 233.402 332.891 235.717C333.582 240.438 335.291 244.994 336.253 249.687C337.25 254.549 337.867 259.485 338.62 264.398C338.903 266.243 337.901 266.809 336.18 266.979C331.634 267.426 328.085 266.215 325.187 262.343C316.379 250.576 308.398 238.457 305.517 223.683C304.888 220.457 304.118 217.197 302.907 214.157C300.507 208.14 302.013 202.225 303.049 196.361C304.385 188.799 306.219 181.327 307.871 173.658L307.877 173.652Z"
                fill="currentColor"
            />
        ),
        forearms: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="forearms"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M116.613 268.904C116.488 275.877 115.77 282.369 113.358 288.754C108.643 301.252 101.273 311.967 93.2803 322.58C85.6102 332.763 79.1685 343.92 72.7495 354.968C69.1324 361.195 66.6983 368.1 63.5737 374.627C63.1039 375.612 61.8189 376.772 60.834 376.851C54.681 377.321 48.6016 376.636 42.8108 374.412C39.7372 373.234 39.4258 372.436 40.9032 369.555C48.3752 355.002 51.5677 339.057 55.9773 323.514C61.9944 302.322 71.4305 282.726 83.6064 264.409C85.2196 261.981 86.6518 259.434 88.1858 256.949C88.2593 256.825 88.5141 256.813 89.1424 256.57C89.6688 258.845 89.8839 261.2 90.7783 263.255C91.684 265.332 93.0652 267.29 94.6105 268.96C95.8501 270.302 97.2087 269.934 98.171 268.111C101.08 262.564 102.179 256.604 102.614 250.44C102.926 246.025 103.175 241.593 103.843 237.229C104.233 234.664 105.269 232.163 106.254 229.734C107.013 227.866 109 227.663 109.888 229.497C110.992 231.778 112.164 234.427 112 236.832C111.768 240.325 110.268 243.721 109.486 247.196C108.19 252.959 106.752 258.715 105.932 264.557C105.394 268.36 105.966 268.626 109.951 268.881C112.079 269.017 114.23 268.904 116.607 268.904H116.613ZM406.705 370.772C400.999 372.776 395.887 375.668 389.921 375.94C384.17 376.2 383.966 376.223 382.053 370.648C377.96 358.721 370.522 348.652 364.047 338.078C358.754 329.429 352.748 321.194 346.737 313.014C337.787 300.828 332.314 287.328 330.208 272.39C329.931 270.409 330.604 269.583 332.529 269.464C334.312 269.357 336.089 269.062 337.878 268.966C340.561 268.819 341.722 267.194 341.308 264.828C340.278 258.913 339.044 253.032 337.737 247.168C336.899 243.41 335.563 239.748 334.889 235.966C334.578 234.234 334.991 232.185 335.653 230.504C336.627 228.036 338.789 228.082 340.374 230.278C342.916 233.799 343.578 237.868 343.94 242.023C344.354 246.71 344.382 251.453 345.135 256.083C345.757 259.926 347.076 263.679 348.293 267.404C348.961 269.458 350.626 270.03 352.165 268.389C353.535 266.928 354.656 265.14 355.494 263.311C356.569 260.962 357.243 258.438 358.347 255.262C362.394 261.998 366.39 268.038 369.787 274.4C381.232 295.824 390.289 318.154 396.119 341.831C398.372 350.984 402.516 359.672 405.799 368.576C405.991 369.097 406.223 369.606 406.705 370.766V370.772Z"
                fill="currentColor"
            />
        ),

        hand_wrist: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="hand_wrist"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M69.6136 424.879C68.9117 424.324 67.9098 423.916 67.5645 423.192C65.8324 419.575 64.1172 415.935 62.7078 412.188C61.4568 408.86 60.9077 405.294 57.3133 403.319C55.0037 402.051 53.1131 402.39 52.0772 404.519C49.0885 410.66 46.1676 416.852 43.643 423.198C41.3166 429.05 39.5788 435.129 37.4561 441.067C37.173 441.865 36.1711 442.409 35.5032 443.071C35.073 442.227 34.2069 441.344 34.2918 440.558C34.5805 437.875 35.1126 435.203 35.707 432.565C37.1391 426.237 38.7127 419.943 40.0769 413.603C40.2637 412.732 39.5731 411.679 39.2901 410.705C38.5995 411.362 37.7108 411.905 37.2523 412.698C32.4861 420.911 27.7992 429.169 23.0726 437.405C22.6537 438.135 22.2745 438.984 21.6405 439.482C20.9895 439.992 20.0555 440.128 19.2404 440.427C19.0423 439.624 18.4649 438.667 18.7083 438.039C20.6273 433.137 22.682 428.286 24.7425 423.441C26.8029 418.596 28.9313 413.773 31.0144 408.934C31.2747 408.334 31.6087 407.7 31.6314 407.071C31.6597 406.296 31.4049 405.509 31.2747 404.728C30.5445 405.147 29.5653 405.39 29.1294 406.013C24.4481 412.732 19.8631 419.518 15.2271 426.271C14.5365 427.279 13.8346 428.348 12.9006 429.084C12.1364 429.684 11.01 429.831 10.0477 430.177C9.97411 429.079 9.56089 427.856 9.90053 426.905C10.4213 425.428 11.4459 424.126 12.2666 422.75C16.3083 415.975 20.4178 409.228 24.3519 402.39C25.1048 401.083 25.1727 399.385 25.6878 397.336C16.7045 400.449 11.4572 408.209 3.2041 410.62C14.8082 398.57 26.4123 386.519 38.0617 374.428C45.3469 379.274 53.5037 379.093 61.1511 379.427C64.3663 394.534 67.5305 409.42 70.7004 424.301C70.3325 424.494 69.9646 424.686 69.5966 424.879H69.6136ZM384.481 378.26C392.344 378.776 399.103 375.011 406.28 372.974C407.69 372.572 408.374 372.736 409.348 373.806C418.105 383.383 426.896 392.926 435.794 402.373C438.223 404.954 441.047 407.168 443.679 409.545C441.913 411.639 439.926 411.447 437.69 409.449C433.134 405.39 428.481 401.439 423.822 397.5C423.086 396.877 422.124 396.521 421.264 396.039C420.958 396.204 420.647 396.373 420.341 396.538C420.828 398.105 421.026 399.843 421.852 401.207C425.503 407.241 429.483 413.077 433.038 419.167C434.538 421.737 435.279 424.748 436.366 427.556C436.032 427.799 435.704 428.048 435.37 428.292C433.881 427.024 432.121 425.965 430.96 424.443C426.098 418.098 421.422 411.611 416.65 405.198C416.163 404.547 415.462 404.06 414.862 403.5C414.539 403.681 414.216 403.862 413.899 404.037C415.02 407.139 415.926 410.343 417.296 413.326C420.318 419.898 423.579 426.356 426.737 432.865C426.941 433.284 427.275 433.782 427.184 434.162C426.93 435.248 426.494 436.295 426.126 437.354C425.22 436.822 423.958 436.511 423.46 435.724C420.047 430.318 416.769 424.828 413.509 419.332C411.929 416.666 410.509 413.898 408.946 411.22C408.465 410.4 407.757 409.703 407.157 408.956C406.829 409.052 406.501 409.149 406.173 409.245C406.388 411.266 406.439 413.32 406.852 415.296C408.103 421.262 409.563 427.182 410.803 433.154C411.199 435.073 411.324 437.082 411.273 439.041C411.25 439.782 410.509 440.92 409.869 441.107C409.286 441.277 408.131 440.586 407.707 439.952C406.988 438.888 406.495 437.609 406.173 436.352C404.882 431.354 404.112 426.181 402.363 421.352C400.195 415.381 397.416 409.607 394.557 403.919C392.774 400.37 388.376 400.488 386.327 404.009C385.155 406.019 384.481 408.311 383.553 410.462C382.076 413.909 380.666 417.39 379.013 420.752C378.617 421.562 377.389 421.969 376.545 422.558C376.392 421.618 375.945 420.616 376.132 419.745C377.836 411.735 379.76 403.777 381.391 395.756C382.455 390.521 383.14 385.206 384.012 379.93C384.102 379.393 384.306 378.872 384.481 378.255V378.26Z"
                fill="currentColor"
            />
        ),
        hips_gluteus: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="hips_gluteus"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M142.312 385.726C143.184 382.693 144.027 379.653 144.933 376.63C149.133 362.666 153.35 348.714 157.544 334.755C157.759 334.037 158.003 333.272 157.969 332.542C157.771 327.839 160.131 325.642 164.671 325.167C170.241 324.584 175.794 323.769 181.353 323.101C181.885 323.039 182.456 323.242 183 323.373C183.141 323.407 183.238 323.627 183.334 323.735C178.619 328.569 174.13 333.652 169.143 338.174C162.814 343.919 158.744 350.74 157.318 359.134C155.535 369.657 149.348 377.796 143.178 385.958C142.884 385.879 142.595 385.806 142.301 385.726H142.312ZM222.29 378.198C222.29 383.004 222.137 387.809 222.329 392.604C222.522 397.443 222.205 402.051 220.382 406.692C218.237 412.166 215.848 417.673 216.403 423.9C216.488 424.834 214.586 426.345 213.301 426.933C207.063 429.775 200.463 430.488 193.681 429.73C188.174 429.113 182.581 428.926 177.164 427.85C157.901 424.024 147.616 413.241 149.054 392.462C149.495 386.106 150.972 380.117 153.905 374.332C156.31 369.589 158.201 364.432 159.367 359.242C161.077 351.674 164.682 345.431 170.099 340.071C174.922 335.299 179.705 330.482 184.63 325.818C185.428 325.065 187.036 324.482 188.038 324.742C202.795 328.507 213.946 336.85 220.699 350.752C223.15 355.801 222.092 361.11 222.25 366.334C222.375 370.285 222.273 374.242 222.273 378.198C222.273 378.198 222.284 378.198 222.29 378.198ZM298.26 393.124C297.728 401.026 297.371 409.024 292.333 415.698C288.139 421.256 282.173 424.59 275.657 426.22C264.874 428.92 253.853 430.63 242.679 429.209C239.379 428.79 236.164 427.494 233.011 426.339C232.173 426.033 231.12 424.726 231.148 423.911C231.358 417.164 228.545 411.271 226.354 405.158C225.392 402.47 224.814 399.509 224.752 396.656C224.475 383.757 224.124 370.84 224.475 357.951C224.644 351.555 227.769 345.804 231.896 340.891C238.96 332.48 247.966 327.074 258.636 324.482C259.508 324.273 260.906 324.391 261.444 324.952C269.08 332.837 278.272 339.374 283.48 349.382C285.11 352.517 286.226 355.982 287.12 359.417C288.716 365.559 290.635 371.519 294.06 376.936C297.173 381.86 298.396 387.317 298.271 393.124H298.26ZM303.864 387.215C297.649 377.887 290.794 369.3 289.005 358.065C287.72 350.016 283.531 343.552 277.814 337.954C273.716 333.94 269.618 329.922 265.491 325.931C264.823 325.286 264.025 324.782 263.283 324.216L263.6 323.084C265.525 322.948 267.518 322.433 269.369 322.744C275.114 323.712 280.82 324.918 286.503 326.214C287.482 326.435 288.818 327.391 289.056 328.257C294.128 346.84 299.064 365.457 304.022 384.074C304.215 384.798 304.328 385.54 304.436 386.281C304.453 386.417 304.266 386.576 303.87 387.215H303.864Z"
                fill="currentColor"
            />
        ),
        Hamstrings: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="Hamstrings"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M134.438 547.413C136.023 539.918 137.755 532.888 138.938 525.762C139.81 520.492 140.568 515.081 140.325 509.777C139.793 497.959 138.259 486.18 137.778 474.355C137.291 462.333 137.608 450.276 137.517 438.231C137.461 430.895 137.257 423.56 137.183 416.218C137.076 404.943 139.38 394.358 146.302 385.143C146.444 384.957 146.733 384.883 147.146 384.651C146.472 395.949 144.87 407.235 152.586 416.909C159.984 426.18 169.873 430.528 181.902 431.229C181.602 432.639 181.466 433.714 181.143 434.728C178.177 444.056 175.143 453.361 172.194 462.689C168.588 474.078 166.737 485.783 166.188 497.693C165.299 516.858 156.073 531.411 141.327 542.935C139.549 544.328 137.636 545.545 135.774 546.818C135.48 547.022 135.112 547.113 134.438 547.401V547.413ZM173.1 582.365C172.635 581.482 172.251 580.775 171.888 580.061C167.541 571.509 163.165 562.973 158.88 554.392C158.263 553.158 157.68 551.703 157.726 550.373C157.98 543.235 158.411 536.098 158.869 528.971C158.931 527.975 159.333 526.922 159.848 526.056C165.786 516.072 168.005 505.045 168.866 493.668C169.845 480.74 171.701 468.067 176.813 455.959C179.072 450.61 180.221 444.797 181.885 439.199C182.219 438.084 182.587 436.975 182.938 435.865C183.249 435.888 183.555 435.911 183.866 435.933C185.202 445.476 186.968 454.98 187.772 464.569C189.04 479.721 191.106 494.67 194.559 509.511C195.606 514.006 194.174 519.185 193.421 523.979C190.251 544.158 183.408 563.114 173.971 581.182C173.802 581.51 173.536 581.788 173.105 582.371L173.1 582.365ZM195.725 506.246C192.379 481.612 189.034 456.978 185.638 431.977C195.934 433.522 206.282 432.662 216.08 427.964C216.08 432.084 216.29 435.894 216.04 439.669C215.293 450.882 213.589 461.874 209.389 472.448C205.229 482.931 201.623 493.64 197.763 504.247C197.514 504.927 197.157 505.561 196.851 506.217L195.73 506.251L195.725 506.246ZM250.4 506.336C249.987 505.453 249.506 504.604 249.172 503.693C244.507 490.849 239.888 477.995 235.207 465.157C231.041 453.735 231.267 441.843 231.33 429.962C231.33 429.809 231.528 429.656 231.731 429.356C232.184 429.401 232.75 429.373 233.254 429.526C241.603 432.062 250.049 432.69 258.681 431.156C262.112 430.545 262.434 430.884 261.93 434.275C260.657 442.839 259.128 451.369 257.877 459.933C256.128 471.95 254.577 483.995 252.857 496.017C252.37 499.43 251.594 502.81 250.955 506.2C250.773 506.245 250.587 506.285 250.406 506.33L250.4 506.336ZM274.735 582.059C266.725 568.605 260.844 554.901 257.493 540.173C256.01 533.653 254.844 527.047 253.066 520.606C251.181 513.779 253.428 507.366 254.391 500.857C257.034 482.97 260.006 465.129 262.763 447.254C263.289 443.846 263.414 440.382 264.382 436.828C265.412 439.929 266.572 443.003 267.455 446.15C270.325 456.401 273.336 466.618 275.804 476.965C277.152 482.614 277.757 488.478 278.261 494.285C279.076 503.664 280.752 512.828 285.059 521.234C289.095 529.102 289.458 537.451 289.588 545.958C289.662 550.82 288.518 554.964 285.858 559.271C281.929 565.628 279.218 572.737 275.986 579.529C275.635 580.26 275.267 580.984 274.735 582.065V582.059ZM265.598 430.567C266.448 430.358 267.144 430.052 267.846 430.03C273.744 429.832 278.974 427.369 284.284 425.196C291.229 422.354 295.407 417.034 297.648 410.043C299.856 403.16 301 396.141 300.179 388.885C300.099 388.206 300.269 387.493 300.326 386.796C300.649 386.677 300.971 386.559 301.294 386.44C303.326 390.674 305.896 394.743 307.277 399.181C310.028 408 309.841 417.198 309.666 426.362C309.434 438.888 309.513 451.414 309.213 463.94C309.054 470.512 308.483 477.084 307.888 483.633C306.643 497.438 305.862 511.272 307.594 525.049C308.353 531.072 310.509 536.913 312.021 542.839C312.338 544.079 312.626 545.33 313.079 547.203C306.62 543.309 301.113 539.409 296.392 534.343C287.675 524.987 283.684 513.644 281.714 501.315C279.784 489.236 278.255 477.055 275.567 465.146C273.104 454.25 269.317 443.648 266.119 432.916C265.91 432.22 265.797 431.49 265.587 430.562L265.598 430.567Z"
                fill="currentColor"
            />
        ),
        calves: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="calves"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M153.758 560.743C153.282 559.35 152.88 557.924 152.32 556.565C150.644 552.507 149.031 548.415 147.123 544.458C146.354 542.856 146.161 541.939 147.65 540.654C150.061 538.577 152.212 536.2 154.89 533.992C154.233 542.868 156.814 551.749 153.752 560.743H153.758ZM144.553 543.739C146.676 548.817 148.589 553.701 150.757 558.473C153.48 564.456 153.31 569.89 150.474 576.133C144.01 590.352 141.604 605.793 138.633 621.036C136.878 630.019 134.625 638.912 128.653 646.276C124.798 651.03 119.647 653.719 114.071 655.802C114.071 649.825 113.726 644.181 114.162 638.6C114.666 632.136 116.081 625.751 116.704 619.287C117.66 609.353 121.408 600.388 125.296 591.365C128.262 584.493 131.144 577.458 132.842 570.207C134.014 565.209 133.204 559.718 133.068 554.449C133 551.794 133.747 550.084 136.283 548.862C138.972 547.566 141.401 545.72 144.559 543.734L144.553 543.739ZM159.831 662.085C149.92 658.247 143.416 651.375 138.995 642.325C138.298 640.904 137.364 639.602 136.657 638.181C136.408 637.677 136.34 636.964 136.476 636.41C139.312 624.896 141.955 613.327 145.119 601.904C147.678 592.672 151.001 583.65 153.718 574.458C155.122 569.703 155.948 564.778 157.024 559.928C157.222 559.033 157.358 558.128 157.663 556.475C158.829 558.314 159.729 559.48 160.369 560.777C163.324 566.765 166.188 572.805 169.126 578.799C170.948 582.512 171.101 586.288 170.145 590.289C167.133 602.85 166.765 615.631 167.218 628.463C167.586 638.702 165.56 648.477 161.744 657.924C161.184 659.305 160.499 660.636 159.826 662.085H159.831ZM291.705 560.522V533.687C294.049 535.877 297.343 538.956 300.332 541.752C297.671 547.945 294.994 554.177 292.316 560.414C292.113 560.454 291.909 560.488 291.705 560.528V560.522ZM289.163 558.337C289.396 558.569 289.514 558.632 289.52 558.705C290.313 568.543 295.701 576.982 297.932 586.367C300.541 597.348 302.913 608.386 305.494 619.372C306.785 624.868 308.37 630.302 309.706 635.787C309.977 636.896 310.119 638.3 309.672 639.279C305.675 648.042 299.93 655.321 291.575 660.398C289.526 661.643 287.997 661.502 286.899 659.441C285.546 656.883 284.165 654.296 283.197 651.585C279.439 641.051 279.654 630.144 280.259 619.174C280.871 608.108 280.084 597.15 276.823 586.463C276.512 585.45 276.308 584.103 276.722 583.22C280.333 575.46 284.092 567.767 287.839 560.075C288.145 559.447 288.699 558.931 289.158 558.343L289.163 558.337ZM302.783 543.286C306.207 545.635 309.36 547.69 312.366 549.943C313.074 550.469 313.617 551.635 313.674 552.535C313.883 555.915 314.109 559.328 313.86 562.69C313.464 568.062 314.098 573.246 316.023 578.222C317.993 583.31 319.9 588.473 322.436 593.284C327.446 602.799 330.083 612.818 330.78 623.515C331.397 633.002 332.546 642.455 333.389 651.924C333.695 655.338 333.191 655.717 330.021 654.392C324.531 652.094 320.087 648.619 316.668 643.547C311.053 635.215 309.292 625.763 307.566 616.197C304.753 600.608 301.317 585.178 294.643 570.688C293.624 568.48 293.539 566.46 294.371 564.184C296.494 558.382 298.413 552.501 300.541 546.7C300.977 545.505 301.956 544.515 302.788 543.281L302.783 543.286Z"
                fill="currentColor"
            />
        ),
        heels_ankles: (selected: boolean, clickable: boolean, key: number) => (
            <path
                key={key}
                id="heels_ankles"
                className={`${selected ? "text-secondary" : "text-grey-500"} ${
                    !clickable ? "noHover" : ""
                }`}
                onClick={onClickSvg}
                style={{ cursor: !clickable ? "not-allowed" : "pointer" }}
                d="M157.754 664.185C151.431 676.575 145.397 688.496 139.272 700.371C136.085 706.546 133.951 712.999 133.057 719.916C132.366 725.237 131.228 730.489 130.43 735.799C130.176 737.497 130.391 739.263 130.391 741.001C130.736 741.04 131.076 741.08 131.421 741.119C131.964 738.187 132.508 735.255 133.051 732.318C139.9 734.265 143.953 739.201 143.591 746.565C143.359 751.28 141.293 755.898 140.053 760.563C139.731 760.512 139.402 760.461 139.08 760.404C138.706 759.176 138.327 757.953 137.953 756.725C137.608 756.725 137.257 756.731 136.912 756.736C136.73 758.18 136.136 759.714 136.43 761.055C138.038 768.391 136.776 772.727 131.664 776.326C125.919 780.379 117.604 780.957 112.413 777.577C108.898 775.291 107.811 771.793 107.879 767.796C107.964 762.996 107.969 758.197 108.145 753.408C108.716 737.882 109.299 722.356 109.979 706.835C110.607 692.345 111.388 677.86 112.034 663.37C112.13 661.207 112.973 660.058 115.011 659.187C123.072 655.734 129.134 649.972 133.572 642.449C134.042 641.657 134.523 640.876 135.236 639.698C140.84 650 145.861 660.426 157.759 664.179L157.754 664.185ZM311.953 640.049C315.553 646.168 319.255 651.964 325.923 654.942C326.008 654.981 326.087 655.049 326.178 655.066C332.591 656.221 334.159 660.37 334.499 666.455C335.478 684.03 337.488 701.548 338.337 719.129C338.914 731.044 338.172 743.021 338.144 754.97C338.133 758.91 338.427 762.861 338.733 766.795C339.446 775.964 335.761 779.208 326.002 779.185C322.68 779.179 319.17 777.889 316.091 776.445C312.208 774.628 310.209 770.859 309.326 766.829C308.97 765.204 309.757 763.178 310.447 761.508C311.132 759.861 311.262 758.672 309.298 757.551C308.738 758.429 308.172 759.306 307.606 760.189C307.3 760.234 307 760.28 306.694 760.325C305.432 754.546 304.158 748.772 302.941 742.987C302.834 742.472 302.998 741.838 303.219 741.335C305.234 736.631 309.423 734.457 313.334 731.961C313.651 732.103 313.968 732.239 314.285 732.374C314.285 734.605 314.194 736.835 314.342 739.054C314.387 739.699 315.1 740.304 315.513 740.927C315.91 740.299 316.702 739.625 316.634 739.059C315.842 732.652 315.779 725.99 313.843 719.927C310.34 708.924 306.032 698.141 301.419 687.545C298.351 680.503 294.167 673.943 290.471 667.173C290.024 666.353 289.52 665.566 288.869 664.474C294.241 662.028 299.409 659.419 302.726 654.477C305.868 649.802 308.811 644.991 311.958 640.055L311.953 640.049Z"
                fill="currentColor"
            />
        ),
    };

    return (
        <div className="flex justify-between xl:justify-start items-start text-left">
            <div className="mt-12">
                <svg
                    width="473"
                    viewBox="0 0 473 833"
                    className="w-[150px] md:w-[230px] xl:w-[220px] xl:pl-3 pr-3 xl:pl-0"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                >
                    {Object.keys(bodyParts)
                        .filter(
                            (part) =>
                                !backParts[part] ||
                                backParts[part]?.show !== false,
                        )
                        .map((part: string, key: number) => {
                            let selected = false;
                            if (backParts[part])
                                selected = backParts[part]?.selected;
                            return bodyParts[part](
                                selected,
                                backParts[part]?.clickable !== undefined
                                    ? backParts[part].clickable
                                    : true,
                                key,
                            );
                        })}
                </svg>
            </div>
            <div className="2xl:pl-6 xl:pl-0">
                <p className="text-base mb-3 text-left font-bold whitespace-nowrap">
                    Back of body:
                </p>
                {Object.keys(bodyParts).map((part: string) => {
                    return (
                        <label
                            key={part}
                            className={`flex items-start ${BodyComponentStyle.customeCheckbox}`}
                        >
                            <Checkbox
                                value={part}
                                type="Checkbox"
                                className="mt-2.5 capitalize font-medium !ml-0"
                                checked={backParts[part]?.selected || false}
                                onChange={(e: any) => {
                                    const isChecked = e.target.checked;
                                    setBackParts((prevParts: any) => {
                                        return {
                                            ...prevParts,
                                            [part]: { selected: isChecked },
                                        };
                                    });
                                }}
                            />
                            <div
                                className="font-semibold text-sm ml-3 mt-2 cursor-pointer"
                                onClick={(e) => {
                                    // Handle the click on the div here if needed
                                    // You can also add additional logic to affect the checkbox
                                }}
                            >
                                {part === "biceps" ? (
                                    <p>Triceps/Elbows</p>
                                ) : part === "forearms" ? (
                                    <p>Forearms (Posterior)</p>
                                ) : part === "hand_wrist" ? (
                                    <p>Hands/Wrists</p>
                                ) : part === "heels_ankles" ? (
                                    <p>Heels/Ankles</p>
                                ) : part === "hips_gluteus" ? (
                                    <p>Hips/Glutes</p>
                                ) : (
                                    part
                                        .split("_")
                                        .map(
                                            (word) =>
                                                word.charAt(0).toUpperCase() +
                                                word.slice(1),
                                        )
                                        .join(" ")
                                )}
                            </div>
                        </label>
                    );
                })}
            </div>
        </div>
    );
};
